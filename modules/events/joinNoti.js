module.exports.config = {
	name: "joinNoti",
	eventType: ["log:subscribe"],
	version: "1.0.4",
	credits: "Mirai Team",
	description: "Th√¥ng b√°o bot ho·∫∑c ng∆∞·ªùi v√†o nh√≥m",
	dependencies: {
		"fs-extra": ""
	}
};

module.exports.run = async function({ api, event,Threads }) {
	const { join } = global.nodemodule["path"];
	const { threadID } = event;
	const data = (await Threads.getData(event.threadID)).data || {};
    const checkban = data.banOut || []
	if  (checkban.includes(checkban[0])) return
	else if (event.logMessageData.addedParticipants.some(i => i.userFbId == api.getCurrentUserID())) {
		api.changeNickname(`[ ${global.config.PREFIX} ] ‚Ä¢ ${(!global.config.BOTNAME) ? "BotMilo <3" : global.config.BOTNAME}`, threadID, api.getCurrentUserID());
		return api.sendMessage(	`üî± K√™ÃÅt n√¥ÃÅi thaÃÄnh c√¥ng v·ªõi Bot c·ªßa Vi·ªát ! Bot hi√™Ã£n ƒë∆∞∆°Ã£c v√¢Ã£n haÃÄnh vaÃÄ quaÃân lyÃÅ b∆°Ãâi Ph·∫°m Minh Vi·ªát. üéâ
üëâ Bot v∆∞ÃÄa vaÃÄo box s∆∞Ãâ duÃ£ng ${global.config.PREFIX}resend vaÃÄ ${global.config.PREFIX}rankup 2 l√¢ÃÄn ƒë√™Ãâ traÃÅnh bot spam d√™ÃÉn ƒë√™ÃÅn lag box

üçì Th√¥ng tin c∆° baÃân v√™ÃÄ bot: 
‚ö°Ô∏è Prefix: ${global.config.PREFIX}
üëæ Danh saÃÅch l√™Ã£nh: ${global.config.PREFIX}menu
‚ö±Ô∏è Li√™n h√™Ã£ admin: ${global.config.PREFIX}callad
‚ùå L∆∞u yÃÅ: Kh√¥ng ƒë∆∞·ª£c ch·ª≠i bot nh√© !!

üëô ChuÃÅc caÃÅc baÃ£n s∆∞Ãâ duÃ£ng bot vui veÃâ üíö`, threadID)
;	}
	else {
		try {
			const { createReadStream, existsSync, mkdirSync } = global.nodemodule["fs-extra"];
			let { threadName, participantIDs } = await api.getThreadInfo(threadID);

			const threadData = global.data.threadData.get(parseInt(threadID)) || {};
			const path = join(__dirname, "cache", "joinGif");
			const pathGif = join(path, `chao.gif`);

			var mentions = [], nameArray = [], memLength = [], i = 0;
			
			for (id in event.logMessageData.addedParticipants) {
				const userName = event.logMessageData.addedParticipants[id].fullName;
				nameArray.push(userName);
				mentions.push({ tag: userName, id });
				memLength.push(participantIDs.length - i++);
			}
			memLength.sort((a, b) => a - b);
			
			(typeof threadData.customJoin == "undefined") ? msg = "üéâ Xin chaÃÄo con v·ªãt {name} ü¶Ü\n\n‚ö°Ô∏è ChaÃÄo m∆∞ÃÄng baÃ£n ƒëaÃÉ ƒë√™ÃÅn v∆°ÃÅi chu√¥ÃÄng v·ªãt ü¶Ü {threadName} üêΩ\n\nü§© {name} {type} l√† con v·ªãt th·ª© {soThanhVien} c·ªßa nh√≥m x√†m x√≠ ƒë√∫ n√†y ü•≥" : msg = threadData.customJoin;
			msg = msg
			.replace(/\{name}/g, nameArray.join(', '))
			.replace(/\{type}/g, (memLength.length > 1) ?  'c√°c b·∫°n' : 'b·∫°n')
			.replace(/\{soThanhVien}/g, memLength.join(', '))
			.replace(/\{threadName}/g, threadName);

			if (existsSync(path)) mkdirSync(path, { recursive: true });

			if (existsSync(pathGif)) formPush = { body: msg, attachment: createReadStream(pathGif), mentions }
			else formPush = { body: msg, mentions }

			return api.sendMessage(formPush, threadID);
		} catch (e) { return console.log(e) };
	}
}